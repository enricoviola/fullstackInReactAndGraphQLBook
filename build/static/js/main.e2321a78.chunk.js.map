{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["posts","id","text","user","avatar","username","App","state","postContent","handlePostContentChange","event","setState","target","value","handleSubmit","console","log","preventDefault","newPost","length","prevState","this","className","Helmet","name","content","map","post","i","src","onSubmit","onChange","placeholder","type","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAIMA,EAAQ,CAAC,CACXC,GAAI,EACJC,KAAM,cACNC,KAAM,CACFC,OAAQ,qBACRC,SAAU,cAGlB,CACIJ,GAAI,EACJC,KAAM,cACNC,KAAM,CACFC,OAAQ,qBACRC,SAAU,iBAIGC,E,4MACnBC,MAAQ,CACJP,MAAOA,EACPQ,YAAa,I,EAGjBC,wBAA0B,SAACC,GACvB,EAAKC,SAAS,CAACH,YAAaE,EAAME,OAAOC,S,EAE7CC,aAAe,SAACJ,GAEZK,QAAQC,IAAI,EAAGN,EAAO,EAAKH,OAC3BG,EAAMO,iBACN,IAAMC,EAAU,CACZjB,GAAI,EAAKM,MAAMP,MAAMmB,OAAS,EAC9BjB,KAAM,EAAKK,MAAMC,YACjBL,KAAM,CACFC,OAAQ,qBACRC,SAAU,cAGlB,EAAKM,UAAS,SAACS,GAAD,MAAgB,CAC1BpB,MAAM,CAAEkB,GAAH,mBAAeE,EAAUpB,QAC9BQ,YAAa,Q,4CAIrB,WAAU,IAAD,EACwBa,KAAKd,MAA5BP,EADD,EACCA,MAAOQ,EADR,EACQA,YAGf,OAFIO,QAAQC,IAAI,EAAGK,KAAKd,OAGtB,sBAAKe,UAAU,YAAf,UACA,eAACC,EAAA,EAAD,WACI,qDACA,sBAAMC,KAAK,cAAcC,QAAQ,iDAEnC,8CACA,qBAAKH,UAAU,OAAf,SACKtB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACP,sBAAmBN,UAAU,OAA7B,UACI,sBAAKA,UAAU,SAAf,UACI,qBAAKO,IAAKF,EAAKxB,KAAKC,SACpB,6BAAKuB,EAAKxB,KAAKE,cAEnB,mBAAGiB,UAAU,UAAb,SACKK,EAAKzB,SANJyB,EAAK1B,SAWvB,qBAAKqB,UAAU,WAAf,SACI,uBAAMQ,SAAUT,KAAKP,aAArB,UACI,0BAAUD,MAAOL,EAAauB,SAAUV,KAAKZ,wBAC7CuB,YAAY,kCACZ,uBAAOC,KAAK,SAASpB,MAAM,uB,GAvDVqB,aCTlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2321a78.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './assets/css/style.css';\nimport { Helmet } from 'react-helmet';\n\nconst posts = [{\n    id: 2,\n    text: 'Lorem ipsum',\n    user: {\n        avatar: '../img/avatar1.png',\n        username: 'Test User'\n    }\n},\n{\n    id: 1,\n    text: 'Lorem ipsum',\n    user: {\n        avatar: '../img/avatar2.png',\n        username: 'Test User 2'\n    }\n}];\n\nexport default class App extends Component {\n  state = {\n      posts: posts,\n      postContent: ''\n  }\n\n  handlePostContentChange = (event) => {\n      this.setState({postContent: event.target.value})\n  }\n  handleSubmit = (event) => {\n      \n      console.log(2, event, this.state);\n      event.preventDefault();\n      const newPost = {\n          id: this.state.posts.length + 1,\n          text: this.state.postContent,\n          user: {\n              avatar: '../img/avatar1.png',\n              username: 'Fake User'\n          }\n      };\n      this.setState((prevState) => ({\n          posts: [newPost, ...prevState.posts],\n          postContent: ''\n      }));\n  }\n\n  render() {\n    const { posts, postContent } = this.state;\n        console.log(1, this.state);\n\n    return (\n      <div className=\"container\">\n      <Helmet>\n          <title>Graphbook - Feed</title>\n          <meta name=\"description\" content=\"Newsfeed of all your friends on Graphbook\" />\n      </Helmet>\n        <div>CIao Enri 1</div>\n        <div className=\"feed\">\n            {posts.map((post, i) => \n                <div key={post.id} className=\"post\">\n                    <div className=\"header\">\n                        <img src={post.user.avatar} />\n                        <h2>{post.user.username}</h2>\n                    </div>\n                    <p className=\"content\">\n                        {post.text}\n                    </p>\n                </div>\n            )}\n        </div>\n        <div className=\"postForm\">\n            <form onSubmit={this.handleSubmit}>                      \n                <textarea value={postContent} onChange={this.handlePostContentChange} \n                placeholder=\"Scrivi pure your custom post!\"/>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        </div>\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}